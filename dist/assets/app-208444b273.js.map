{"version":3,"sources":["assets/app.js"],"names":["angular","module","constant","window","_","RouteEditorCtrl","$log","ngNotify","MAP_DECOR_PARAMS","addPoint","event","name","isDefined","vm","map","error","keyCode","ENTER_KEY_CODE","trim","length","getCenter","then","coordinates","find","points","push","pointName","getPointStyle","index","fill","labelFirst","iconColor","labelLast","label","onDragPoint","this","removePoint","remove","bind","$inject","controller","routeEditorDirective","restrict","controllerAs","scope","templateUrl","directive","YandexMapCtrl","$q","YandexMapLoader","Geolocation","MAP_DEFAULT_PARAMS","construct","domNode","all","ymaps","getMaps","center","_getUserLocation","resolved","options","extend","isLoading","mapDefer","resolve","instance","Map","destroy","_map","getMapCenter","redrawRoute","geoObjects","removeAll","_buildGeoObjects","forEach","obj","add","buildGeoObjects","geoPath","GeoObject","geometry","LineString","point","line","pointsLastIndex","geoPoint","Point","properties","balloonContent","_getLabelOptions","events","set","getCoordinates","isFunction","throttle","getLabelOptions","lastIndex","getUserLocation","resolveCoords","coords","defer","isSupports","getCurrentCoordinates","warn","promise","mapApi","errorMessage","ready","reject","message","factory","yandexMapDirective","$parse","bindToController","link","$scope","$element","$attrs","$ctrl","querySelector","parsedRoute","route","$parent","isArray","$watchCollection","join","$on","ngNotifyDecorator","$provide","decorator","$delegate","messageByType","type","types","config","run","SvgIcons","loadSprite","controls","zoom","strokeColor","strokeWidth","strokeOpacity","preset","draggable","navigator","geolocation","getCurrentPosition","position","latitude","longitude","service","svgIconDirective","undefined","SVGRect","element","document","documentElement","addClass","size","SvgIconsFactory","load","url","xhr","XMLHttpRequest","onload","x","createElement","innerHTML","responseText","body","insertBefore","firstChild","open","send","$get","provider"],"mappings":"CAAA,WACI,YAEAA,SAAQC,OAAO,kBAEX,YACA,cACA,WAGA,YACA,eAKR,WACI,YAEAD,SAAQC,OAAO,mBAGnB,WACI,YAEAD,SAAQC,OAAO,cACVC,SAAS,IAAKC,OAAOC,MAG9B,WACI,YAMA,SAASC,GAAgBC,EAAMC,EAAUH,EAAGI,GAWxC,QAASC,GAASC,EAAOC,GACrB,IAAKX,QAAQY,UAAUC,EAAGC,KAEtB,WADAR,GAAKS,MAAM,8CAIf,IAAIL,EAAMM,UAAYC,EAAgB,CAGlC,GAFAN,EAAOP,EAAEc,KAAKP,IAETA,EAAKQ,OAEN,WADAZ,GAASQ,MAAM,kCAInBF,GAAGC,IAAIM,YAAYC,KAAK,SAAUC,GAC9B,MAAIlB,GAAEmB,KAAKV,EAAGW,QAAUF,YAAaA,QACjCf,GAASQ,MAAM,+CAInBF,EAAGW,OAAOC,MACNd,KAAMA,EACNW,YAAaA,SAEjBT,EAAGa,UAAY,QAK3B,QAASC,GAAcC,GACnB,GAAIC,EAUJ,OAPIA,GADU,IAAVD,EACOpB,EAAiBsB,WAAWC,UAC5BH,IAAUf,EAAGW,OAAOL,OAAS,EAC7BX,EAAiBwB,UAAUD,UAE3BvB,EAAiByB,MAAMF,WAI9BF,KAAMA,GAId,QAASK,GAAYN,EAAON,GACxBT,EAAGW,OAAOI,GAAON,YAAcA,EAxDnC,GAAIT,GAAKsB,KACLlB,EAAiB,EAErBJ,GAAGa,UAAY,GACfb,EAAGW,UACHX,EAAGJ,SAAWA,EACdI,EAAGuB,YAAchC,EAAEiC,OAAOC,KAAKlC,EAAGS,EAAGW,QACrCX,EAAGc,cAAgBA,EACnBd,EAAGqB,YAAcA,EAbrB7B,EAAgBkC,SAAW,OAAQ,WAAY,IAAK,oBAApDvC,QACKC,OAAO,kBACPuC,WAAW,kBAAmBnC,MAiEvC,WACI,YAMA,SAASoC,KACL,OACIC,SAAU,IACVF,WAAY,kBACZG,aAAc,cACdC,SACAC,YAAa,iEAVrB7C,QACKC,OAAO,kBACP6C,UAAU,cAAeL,MAalC,WACI,YAMA,SAASM,GAAcC,EAAIC,EAAiBC,EAAa3C,EAAUH,EAAG+C,EAAoB3C,GAiBtF,QAAS4C,GAAUC,GACfL,EAAGM,KACCC,MAAON,EAAgBO,UACvBC,OAAQ5C,EAAG6C,qBAEdrC,KAAK,SAAUsC,GACZ,GAAIC,GAAU5D,QAAQ6D,UAAWV,GAAsBM,OAAQE,EAASF,QAExE5C,GAAGiD,WAAY,EACfC,EAASC,SACLT,MAAOI,EAASJ,MAChBU,SAAU,GAAIN,GAASJ,MAAMW,IAAIb,EAASO,OAKtD,QAASO,KACLtD,EAAGuD,KAAK/C,KAAK,SAAUP,GACnBA,EAAImD,SAASE,YAIrB,QAASE,KACL,MAAOxD,GAAGuD,KAAK/C,KAAK,SAAUP,GAC1B,MAAOA,GAAImD,SAAS7C,cAI5B,QAASkD,GAAY9C,GACjBX,EAAGuD,KAAK/C,KAAK,SAAUP,GACnBA,EAAImD,SAASM,WAAWC,YACxB3D,EAAG4D,iBAAiB3D,EAAIyC,MAAO/B,GAAQkD,QAAQ,SAAUC,GACrD7D,EAAImD,SAASM,WAAWK,IAAID,OAKxC,QAASE,GAAgBtB,EAAO/B,GAE5B,GAAIsD,GAAU,GAAIvB,GAAMwB,WAEhBC,SAAU,GAAIzB,GAAMyB,SAASC,WACzBzD,EAAOV,IAAI,SAAUoE,GACjB,MAAOA,GAAM5D,gBAIzBd,EAAiB2E,MAEjBZ,GAAcO,GACdM,EAAkB5D,EAAOL,OAAS,CA8BtC,OA3BAK,GAAOkD,QAAQ,SAAUQ,EAAOtD,GAC5B,GAAIyD,GAAW,GAAI9B,GAAMwB,WAEjBC,SAAU,GAAIzB,GAAMyB,SAASM,MAAMJ,EAAM5D,aACzCiE,YACIC,eAAgBN,EAAMvE,OAG9BE,EAAG4E,iBAAiB7D,EAAOwD,GAG/BC,GAASK,OAAOd,IAAI,OAAQ,WACxBE,EAAQE,SAASW,IAAI/D,EAAOyD,EAASL,SAASY,oBAG9C5F,QAAQ6F,WAAWhF,EAAGqB,cACtBmD,EAASK,OAAOd,IAAI,UAAWxE,EAAE0F,SAAS,WACtCjF,EAAGqB,aACCN,MAAOA,EACPN,YAAa+D,EAASL,SAASY,oBAEpC,MAGPrB,EAAW9C,KAAK4D,KAGbd,EAGX,QAASwB,GAAgBnE,EAAOoE,GAC5B,GAAIpC,GAAU5D,QAAQ6D,UAAWrD,EAAiByB,MAQlD,OANc,KAAVL,EACA5B,QAAQ6D,OAAOD,EAASpD,EAAiBsB,YAClCF,IAAUoE,GACjBhG,QAAQ6D,OAAOD,EAASpD,EAAiBwB,WAGtC4B,EAGX,QAASqC,KAmBL,QAASC,GAAcC,GACnBC,EAAMpC,QAAQmC,GAAUhD,EAAmBM,QAnB/C,GAAI2C,GAAQpD,EAAGoD,OAgBf,OAdIlD,GAAYmD,aACZnD,EAAYoD,wBACPjF,KAAK6E,GADVhD,SAEW,WACH3C,EAASgG,KAAK,kGAEdL,OAGR3F,EAASgG,KAAK,8FAEdL,KAGGE,EAAMI,QAhIjB,GAAI3F,GAAKsB,KACL4B,EAAWf,EAAGoD,OAGlBvF,GAAG4F,QACCrF,UAAWiD,GAEfxD,EAAGiD,WAAY,EACfjD,EAAGuC,UAAYA,EACfvC,EAAGsD,QAAUA,EACbtD,EAAGyD,YAAcA,EACjBzD,EAAGuD,KAAOL,EAASyC,QACnB3F,EAAG4D,iBAAmBI,EACtBhE,EAAG4E,iBAAmBM,EACtBlF,EAAG6C,iBAAmBuC,EAlB1BlD,EAAcR,SAAW,KAAM,kBAAmB,cAAe,WAAY,IAAK,qBAAsB,oBADxGvC,QACKC,OAAO,kBACPuC,WAAW,gBAAiBO,MA6IrC,WACI,YAMA,SAASE,GAAgBD,EAAI1C,GAKzB,QAASkD,KACL,GAAIkD,GAAe,mEACfN,EAAQpD,EAAGoD,OAWf,OATM,SAAWjG,QAIbA,OAAOoD,MAAMoD,MAAM,WACfP,EAAMpC,QAAQ7D,OAAOoD,UAJzBjD,EAAKS,MAAM2F,GACXN,EAAMQ,QAASC,QAASH,KAOrBN,EAAMI,QAjBjB,OACIhD,QAASA,GAJjBP,EAAgBV,SAAW,KAAM,QAFjCvC,QACKC,OAAO,kBACP6G,QAAQ,kBAAmB7D,MAyBpC,WACI,YAMA,SAAS8D,GAAmBC,EAAQ1G,GAChC,OACIoC,SAAU,IACVF,WAAY,gBACZG,aAAc,KACdE,YAAa,4DACbD,SACAqE,kBACIR,OAAQ,IACRvE,YAAa,KAEjBgF,KAAM,SAAUC,EAAQC,EAAUC,EAAQC,GACtCA,EAAMlE,UAAUgE,EAAS,GAAGG,cAAc,eAE1C,IAAIC,GAAcR,EAAOK,EAAOI,OAAON,EAAOO,QAI1C1H,SAAQ2H,QAAQH,GAChBL,EAAOS,iBAAiB,WACpB,MAAOJ,GAAY1G,IAAI,SAAUoE,GAC7B,MAAOA,GAAM5D,YAAYuG,KAAK,QAEnC,WACCP,EAAMhD,YAAYkD,KAGtBlH,EAAKiG,KAAK,sEAGdY,EAAOW,IAAI,WAAYR,EAAMnD,WA/BzC4C,EAAmBxE,SAAW,SAAU,QAHxCvC,QACKC,OAAO,kBACP6C,UAAU,YAAaiE,MAsChC,WACI,YAMA,SAASgB,GAAkBC,GACvBA,EAASC,UAAU,YAAA,YAAY,SAAUC,GAerC,QAASC,GAAc5H,EAAU6H,EAAMvB,GACnCtG,EAASoF,IAAIkB,EAASuB,GAf1B,GAAIC,IACA,OACA,QACA,UACA,OACA,UAOJ,OAJAA,GAAM3D,QAAQ,SAAU0D,GACpBF,EAAUE,GAAQD,EAAc7F,KAAK,KAAM4F,EAAWE,KAGnDF,KAdfH,EAAkBxF,SAAW,YAJ7BvC,QACKC,OAAO,kBACPqI,OAAOP,MAyBhB,WACI,YAEA/H,SAAQC,OAAO,kBACVsI,KAAA,WAAI,SAAUC,GACXA,EAASC,WAAW,iCAIhC,WACI,YAEAzI,SACKC,OAAO,kBACPC,SAAS,sBACNwI,YACAjF,QAAS,UAAU,WACnBkF,KAAM,KAETzI,SAAS,oBACNiF,MACIyD,YAAa,UACbC,YAAa,EACbC,cAAe,IAEnB7G,OACI8G,OAAQ,qBACRhH,UAAW,UACXiH,WAAW,GAEflH,YACIC,UAAW,WAEfC,WACID,UAAW,gBAK3B,WACI,YAMA,SAASmB,GAAY5C,EAAM0C,GAIvB,QAASqD,KACL,MAAO,eAAiBlG,QAAO8I,UAGnC,QAAS3C,KACL,GAAII,GAAe,yKAEfN,EAAQpD,EAAGoD,OAWf,OATIC,KACAlG,OAAO8I,UAAUC,YAAYC,mBAAmB,SAAUC,GACtDhD,EAAMpC,SAASoF,EAASjD,OAAOkD,SAAUD,EAASjD,OAAOmD,aAC1DlD,EAAMQ,SAETtG,EAAKS,MAAM2F,GACXN,EAAMQ,QAASC,QAASH,KAGrBN,EAAMI,QArBjBrE,KAAKkE,WAAaA,EAClBlE,KAAKmE,sBAAwBA,EADjCpD,EAAYX,SAAW,OAAQ,MAL/BvC,QACKC,OAAO,kBACPsJ,QAAQ,cAAerG,MA6BhC,WACI,YAMA,SAASsG,GAAiBlJ,GAKtB,MAJuBmJ,UAAnBtJ,OAAOuJ,SACP1J,QAAQ2J,QAAQC,SAASC,iBAAiBC,SAAS,WAInDpH,SAAU,KACVG,YAAa,+CACbD,OAAO,EACPsE,KAAM,SAAUC,EAAQC,EAAUC,GACzBA,EAAOe,MACR9H,EAAKS,MAAM,8BAGfoG,EAAOiB,KAAOf,EAAOe,KACrBjB,EAAO4C,KAAO1C,EAAO0C,MAAQ,UAbzCP,EAAiBjH,SAAW,QAN5BvC,QACKC,OAAO,aACP6C,UAAU,UAAW0G,MAuB9B,WACI,YAMA,SAAShB,KAGL,QAASwB,KAKL,QAASC,GAAKC,GACV,GAAIC,GAAM,GAAIhK,QAAOiK,cAErBD,GAAIE,OAAS,WACT,GAAIC,GAAIV,SAASW,cAAc,IAC/BD,GAAEE,UAAYL,EAAIM,aAElBb,SAASc,KAAKC,aAAaL,EAAEM,WAAYhB,SAASc,KAAKE,aAG3DT,EAAIU,KAAK,MAAOX,GAChBC,EAAIW,OAfR,OACIrC,WAAYwB,GAJpB9H,KAAK4I,KAAOf,EALhBhK,QACKC,OAAO,aACP+K,SAAS,WAAYxC","file":"assets/app.js","sourcesContent":["(function () {\r\n    'use strict';\r\n\r\n    angular.module('route-test-app', [\r\n        //external\r\n        'svg-icons',\r\n        'as.sortable',\r\n        'ngNotify',\r\n\r\n        //app-modules\r\n        'templates',\r\n        'vendors'\r\n    ]);\r\n})();\r\n\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('svg-icons', []);\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('vendors', [])\r\n        .constant('_', window._);\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('route-test-app')\r\n        .controller('RouteEditorCtrl', RouteEditorCtrl);\r\n\r\n    function RouteEditorCtrl($log, ngNotify, _, MAP_DECOR_PARAMS) {\r\n        var vm = this;\r\n        var ENTER_KEY_CODE = 13;\r\n\r\n        vm.pointName = '';\r\n        vm.points = [];\r\n        vm.addPoint = addPoint;\r\n        vm.removePoint = _.remove.bind(_, vm.points);\r\n        vm.getPointStyle = getPointStyle;\r\n        vm.onDragPoint = onDragPoint;\r\n\r\n        function addPoint(event, name) {\r\n            if (!angular.isDefined(vm.map)) {\r\n                $log.error('You should pass to vm.map public api of map');\r\n                return;\r\n            }\r\n\r\n            if (event.keyCode === ENTER_KEY_CODE) {\r\n                name = _.trim(name);\r\n\r\n                if (!name.length) {\r\n                    ngNotify.error('Нельзя добавить точку без имени');\r\n                    return;\r\n                }\r\n\r\n                vm.map.getCenter().then(function (coordinates) {\r\n                    if (_.find(vm.points, { coordinates: coordinates })) {\r\n                        ngNotify.error('Точка с такими координатами уже существует');\r\n                        return;\r\n                    }\r\n\r\n                    vm.points.push({\r\n                        name: name,\r\n                        coordinates: coordinates\r\n                    });\r\n                    vm.pointName = '';\r\n                });\r\n            }\r\n        }\r\n\r\n        function getPointStyle(index) {\r\n            var fill;\r\n\r\n            if (index === 0) {\r\n                fill = MAP_DECOR_PARAMS.labelFirst.iconColor;\r\n            } else if (index === vm.points.length - 1) {\r\n                fill = MAP_DECOR_PARAMS.labelLast.iconColor;\r\n            } else {\r\n                fill = MAP_DECOR_PARAMS.label.iconColor;\r\n            }\r\n\r\n            return {\r\n                fill: fill\r\n            };\r\n        }\r\n\r\n        function onDragPoint(index, coordinates) {\r\n            vm.points[index].coordinates = coordinates;\r\n        }\r\n    }\r\n})();\r\n\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('route-test-app')\r\n        .directive('routeEditor', routeEditorDirective);\r\n\r\n    function routeEditorDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            controller: 'RouteEditorCtrl',\r\n            controllerAs: 'routeEditor',\r\n            scope: {},\r\n            templateUrl: '/src/route-test-app/components/route-editor/route-editor.html'\r\n        };\r\n    }\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('route-test-app')\r\n        .controller('YandexMapCtrl', YandexMapCtrl);\r\n\r\n    function YandexMapCtrl($q, YandexMapLoader, Geolocation, ngNotify, _, MAP_DEFAULT_PARAMS, MAP_DECOR_PARAMS) {\r\n        var vm = this;\r\n        var mapDefer = $q.defer();\r\n\r\n        //public api\r\n        vm.mapApi = {\r\n            getCenter: getMapCenter\r\n        };\r\n        vm.isLoading = true;\r\n        vm.construct = construct;\r\n        vm.destroy = destroy;\r\n        vm.redrawRoute = redrawRoute;\r\n        vm._map = mapDefer.promise;\r\n        vm._buildGeoObjects = buildGeoObjects;\r\n        vm._getLabelOptions = getLabelOptions;\r\n        vm._getUserLocation = getUserLocation;\r\n\r\n        function construct(domNode) {\r\n            $q.all({\r\n                ymaps: YandexMapLoader.getMaps(),\r\n                center: vm._getUserLocation()\r\n            })\r\n            .then(function (resolved) {\r\n                var options = angular.extend({}, MAP_DEFAULT_PARAMS, { center: resolved.center });\r\n\r\n                vm.isLoading = false;\r\n                mapDefer.resolve({\r\n                    ymaps: resolved.ymaps,\r\n                    instance: new resolved.ymaps.Map(domNode, options)\r\n                });\r\n            });\r\n        }\r\n\r\n        function destroy() {\r\n            vm._map.then(function (map) {\r\n                map.instance.destroy();\r\n            });\r\n        }\r\n\r\n        function getMapCenter() {\r\n            return vm._map.then(function (map) {\r\n                return map.instance.getCenter();\r\n            });\r\n        }\r\n\r\n        function redrawRoute(points) {\r\n            vm._map.then(function (map) {\r\n                map.instance.geoObjects.removeAll();\r\n                vm._buildGeoObjects(map.ymaps, points).forEach(function (obj) {\r\n                    map.instance.geoObjects.add(obj);\r\n                });\r\n            });\r\n        }\r\n\r\n        function buildGeoObjects(ymaps, points) {\r\n            //path\r\n            var geoPath = new ymaps.GeoObject(\r\n                {\r\n                    geometry: new ymaps.geometry.LineString(\r\n                        points.map(function (point) {\r\n                            return point.coordinates;\r\n                        })\r\n                    )\r\n                },\r\n                MAP_DECOR_PARAMS.line\r\n            );\r\n            var geoObjects = [geoPath];\r\n            var pointsLastIndex = points.length - 1;\r\n\r\n            //labels\r\n            points.forEach(function (point, index) {\r\n                var geoPoint = new ymaps.GeoObject(\r\n                    {\r\n                        geometry: new ymaps.geometry.Point(point.coordinates),\r\n                        properties: {\r\n                            balloonContent: point.name\r\n                        }\r\n                    },\r\n                    vm._getLabelOptions(index, pointsLastIndex)\r\n                );\r\n\r\n                geoPoint.events.add('drag', function () {\r\n                    geoPath.geometry.set(index, geoPoint.geometry.getCoordinates());\r\n                });\r\n\r\n                if (angular.isFunction(vm.onDragPoint)) {\r\n                    geoPoint.events.add('dragend', _.throttle(function () {\r\n                        vm.onDragPoint({\r\n                            index: index,\r\n                            coordinates: geoPoint.geometry.getCoordinates()\r\n                        });\r\n                    }, 100));\r\n                }\r\n\r\n                geoObjects.push(geoPoint);\r\n            });\r\n\r\n            return geoObjects;\r\n        }\r\n\r\n        function getLabelOptions(index, lastIndex) {\r\n            var options = angular.extend({}, MAP_DECOR_PARAMS.label);\r\n\r\n            if (index === 0) {\r\n                angular.extend(options, MAP_DECOR_PARAMS.labelFirst);\r\n            } else if (index === lastIndex) {\r\n                angular.extend(options, MAP_DECOR_PARAMS.labelLast);\r\n            }\r\n\r\n            return options;\r\n        }\r\n\r\n        function getUserLocation() {\r\n            var defer = $q.defer();\r\n\r\n            if (Geolocation.isSupports()) {\r\n                Geolocation.getCurrentCoordinates()\r\n                    .then(resolveCoords)\r\n                    .catch(function () {\r\n                        ngNotify.warn('Вы запретили использовать определение своей локации. ' +\r\n                            'Будут использованы стандартные координаты');\r\n                        resolveCoords();\r\n                    });\r\n            } else {\r\n                ngNotify.warn('Ваш браузер не поддерживает определение локации. ' +\r\n                    'Будут использованы стандартные координаты');\r\n                resolveCoords();\r\n            }\r\n\r\n            return defer.promise;\r\n\r\n            function resolveCoords(coords) {\r\n                defer.resolve(coords || MAP_DEFAULT_PARAMS.center);\r\n            }\r\n        }\r\n    }\r\n})();\r\n\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('route-test-app')\r\n        .factory('YandexMapLoader', YandexMapLoader);\r\n\r\n    function YandexMapLoader($q, $log) {\r\n        return {\r\n            getMaps: getMaps\r\n        };\r\n\r\n        function getMaps() {\r\n            var errorMessage = 'You must load yandex maps js before using \"yandex-map\" component';\r\n            var defer = $q.defer();\r\n\r\n            if (!('ymaps' in window)) {\r\n                $log.error(errorMessage);\r\n                defer.reject({ message: errorMessage });\r\n            } else {\r\n                window.ymaps.ready(function () {\r\n                    defer.resolve(window.ymaps);\r\n                });\r\n            }\r\n\r\n            return defer.promise;\r\n        }\r\n    }\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('route-test-app')\r\n        .directive('yandexMap', yandexMapDirective);\r\n\r\n    function yandexMapDirective($parse, $log) {\r\n        return {\r\n            restrict: 'E',\r\n            controller: 'YandexMapCtrl',\r\n            controllerAs: 'vm',\r\n            templateUrl: '/src/route-test-app/components/yandex-map/yandex-map.html',\r\n            scope: {},\r\n            bindToController: {\r\n                mapApi: '=',\r\n                onDragPoint: '&'\r\n            },\r\n            link: function ($scope, $element, $attrs, $ctrl) {\r\n                $ctrl.construct($element[0].querySelector('.yandex-map'));\r\n\r\n                var parsedRoute = $parse($attrs.route)($scope.$parent);\r\n\r\n                //watch by coordinates\r\n                //used this approach for one direction binding with watching\r\n                if (angular.isArray(parsedRoute)) {\r\n                    $scope.$watchCollection(function () {\r\n                        return parsedRoute.map(function (point) {\r\n                            return point.coordinates.join('|');\r\n                        });\r\n                    }, function () {\r\n                        $ctrl.redrawRoute(parsedRoute);\r\n                    });\r\n                } else {\r\n                    $log.warn('You must pass array to \"route\" attribute of \"yandex-map\" directive');\r\n                }\r\n\r\n                $scope.$on('$destroy', $ctrl.destroy);\r\n            }\r\n        };\r\n    }\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('route-test-app')\r\n        .config(ngNotifyDecorator);\r\n\r\n    function ngNotifyDecorator($provide) {\r\n        $provide.decorator('ngNotify', function ($delegate) {\r\n            var types = [\r\n                'info',\r\n                'error',\r\n                'success',\r\n                'warn',\r\n                'grimace'\r\n            ];\r\n\r\n            types.forEach(function (type) {\r\n                $delegate[type] = messageByType.bind(null, $delegate, type);\r\n            });\r\n\r\n            return $delegate;\r\n\r\n            function messageByType(ngNotify, type, message) {\r\n                ngNotify.set(message, type);\r\n            }\r\n        });\r\n    }\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('route-test-app')\r\n        .run(function (SvgIcons) {\r\n            SvgIcons.loadSprite('/assets/svgs/sprite.svg');\r\n        });\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('route-test-app')\r\n        .constant('MAP_DEFAULT_PARAMS', {\r\n            controls: [],\r\n            center: [55.773842,37.625675], //Moscow\r\n            zoom: 10\r\n        })\r\n        .constant('MAP_DECOR_PARAMS', {\r\n            line: {\r\n                strokeColor: '#6c7174',\r\n                strokeWidth: 5,\r\n                strokeOpacity: 0.5\r\n            },\r\n            label: {\r\n                preset: 'islands#circleIcon',\r\n                iconColor: '#989c9e',\r\n                draggable: true\r\n            },\r\n            labelFirst: {\r\n                iconColor: '#70E63C'\r\n            },\r\n            labelLast: {\r\n                iconColor: '#FF4646'\r\n            }\r\n        });\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('route-test-app')\r\n        .service('Geolocation', Geolocation);\r\n\r\n    function Geolocation($log, $q) {\r\n        this.isSupports = isSupports;\r\n        this.getCurrentCoordinates = getCurrentCoordinates;\r\n\r\n        function isSupports() {\r\n            return 'geolocation' in window.navigator;\r\n        }\r\n\r\n        function getCurrentCoordinates() {\r\n            var errorMessage = 'You should not call \"getCurrentCoordinates()\" method when User client doen\\'t ' +\r\n                'support geolocation api. Use \"isSupports()\" method before call \"getCurrentCoordinates()\"';\r\n            var defer = $q.defer();\r\n\r\n            if (isSupports()) {\r\n                window.navigator.geolocation.getCurrentPosition(function (position) {\r\n                    defer.resolve([position.coords.latitude, position.coords.longitude]);\r\n                }, defer.reject);\r\n            } else {\r\n                $log.error(errorMessage);\r\n                defer.reject({ message: errorMessage });\r\n            }\r\n\r\n            return defer.promise;\r\n        }\r\n    }\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('svg-icons')\r\n        .directive('svgIcon', svgIconDirective);\r\n\r\n    function svgIconDirective($log) {\r\n        if (window.SVGRect === undefined) {\r\n            angular.element(document.documentElement).addClass('no-svg');\r\n        }\r\n\r\n        return {\r\n            restrict: 'EA',\r\n            templateUrl: '/src/svg-icons/blocks/svg-icon/svg-icon.html',\r\n            scope: true,\r\n            link: function ($scope, $element, $attrs) {\r\n                if (!$attrs.type) {\r\n                    $log.error('You must pass type of icon');\r\n                }\r\n\r\n                $scope.type = $attrs.type;\r\n                $scope.size = $attrs.size || 'small';\r\n            }\r\n        };\r\n    }\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('svg-icons')\r\n        .provider('SvgIcons', SvgIcons);\r\n\r\n    function SvgIcons() {\r\n        this.$get = SvgIconsFactory;\r\n\r\n        function SvgIconsFactory() {\r\n            return {\r\n                loadSprite: load\r\n            };\r\n\r\n            function load(url) {\r\n                var xhr = new window.XMLHttpRequest();\r\n\r\n                xhr.onload = function () {\r\n                    var x = document.createElement('x');\r\n                    x.innerHTML = xhr.responseText;\r\n\r\n                    document.body.insertBefore(x.firstChild, document.body.firstChild);\r\n                };\r\n\r\n                xhr.open('GET', url);\r\n                xhr.send();\r\n            }\r\n        }\r\n    }\r\n})();\r\n\r\n"],"sourceRoot":"/source/"}